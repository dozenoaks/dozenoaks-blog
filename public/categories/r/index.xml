<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Dozenoaks Blog</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Dozenoaks Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Plotting mixture models in ggplot2</title>
      <link>/2019/06/mixture-models/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/06/mixture-models/</guid>
      <description>We have a couple of different projects running at the moment that need us to think about mixture models - these are common in single molecule biophysics work as you frequently end up with two or more populations of molecules stretched out along a continuous variable; could be velocity, step size or something else. A common solution to figuring out what the typical representative values are in the mixed population is to fit multiple gaussians to the data and describe the mean and standard deviation of each.</description>
    </item>
    
    <item>
      <title>Moving the blog</title>
      <link>/2018/03/moving-the-blog/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/moving-the-blog/</guid>
      <description>I moved my blog! Not just in terms of where it’s hosted, but how the whole thing is built. Previously I’d been using ghost, which was fine up until the moment I wanted to publish more code/analysis. The process of copy-pasting code and exporting images was taking more time than writing the code itself.
I’m now using the blogdown package which builds static websites within RStudio using Hugo and lets you publish the results.</description>
    </item>
    
    <item>
      <title>Turning a kymograph into tidy data using the tidyverse in R</title>
      <link>/2018/02/turning-a-kymograph-into-tidy-data-using-the-tidyverse-in-r/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/turning-a-kymograph-into-tidy-data-using-the-tidyverse-in-r/</guid>
      <description>I have a bit of a love hate relationship with kymographs. In the way that they compress data there’s no doubt that you loose information, but in the world of axonal transport and low signal:noise they have clear advantages in enabling quantification.
I covered before a couple of strategies you can use to import image data into R. The next step in my workflow is usually to turn that image into a data table for further analysis.</description>
    </item>
    
    <item>
      <title>Importing images into R</title>
      <link>/2016/09/importing-images-into-r/</link>
      <pubDate>Sat, 24 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/09/importing-images-into-r/</guid>
      <description>In May my paper was finally released into the wild. Amongst other things it was the culmination of 4 years of me learning to use R for data analysis (and in my case data = images of cells). I’ve been meaning to blog some of this for a while, but I will try for my own sanity to keep everything in bite size chunks. Starting at the start: data import.</description>
    </item>
    
  </channel>
</rss>